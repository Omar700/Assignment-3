{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","useState","description","setDescription","amount","setAmount","creditsView","credits","map","credit","index","date","slice","toFixed","newCredit","parseFloat","Date","toISOString","addCredit","placeholder","required","step","Debits","debits","debit","newDebit","addDebit","App","logInInfo","newUser","currentUser","updatedCredits","creditList","newBalance","reduce","sum","debitList","updatedDebits","a","fetch","creditsRes","debitsRes","json","totalCredits","totalDebits","balance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.593ea435.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Credits = (props) => {\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newCredit = {\r\n      description: description,\r\n      amount: parseFloat(amount),\r\n      date: new Date().toISOString()\r\n    };\r\n    props.addCredit(newCredit);\r\n    setDescription('');\r\n    setAmount('');\r\n  };\r\n\r\n  const creditsView = props.credits.map((credit, index) => {\r\n    let date = credit.date.slice(0, 10);\r\n    return (\r\n      <li key={index}>\r\n        {credit.description} - ${credit.amount.toFixed(2)} on {date}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <h3>Account Balance: ${props.accountBalance.toFixed(2)}</h3>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n\r\n      <ul>{creditsView}</ul>\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Debits = (props) => {\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  // Create the list of Debit items\r\n  const debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit, index) => {\r\n      let date = debit.date.slice(0, 10);\r\n      return (\r\n        <li key={index}>\r\n          ${debit.amount.toFixed(2)} {debit.description} {date}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Handle form submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newDebit = {\r\n      description: description,\r\n      amount: parseFloat(amount),\r\n      date: new Date().toISOString()\r\n    };\r\n    props.addDebit(newDebit);\r\n    setDescription('');\r\n    setAmount('');\r\n  };\r\n\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      <h3>Account Balance: ${props.accountBalance.toFixed(2)}</h3>\r\n\r\n      <ul>{debitsView()}</ul>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={amount}\r\n          step=\"0.01\"\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser };\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({ currentUser: newUser });\r\n  }\r\n\r\n  // Add new credit and recalculate balance\r\n  addCredit = (newCredit) => {\r\n    const updatedCredits = [...this.state.creditList, newCredit];\r\n    const totalCredits = updatedCredits.reduce((sum, credit) => sum + credit.amount, 0);\r\n    const totalDebits = this.state.debitList.reduce((sum, debit) => sum + debit.amount, 0);\r\n    const newBalance = totalCredits - totalDebits;\r\n    this.setState({\r\n      creditList: updatedCredits,\r\n      accountBalance: newBalance\r\n    });\r\n  }\r\n\r\n  // Add new debit and recalculate balance\r\n  addDebit = (newDebit) => {\r\n    const updatedDebits = [...this.state.debitList, newDebit];\r\n    const totalCredits = this.state.creditList.reduce((sum, credit) => sum + credit.amount, 0);\r\n    const totalDebits = updatedDebits.reduce((sum, debit) => sum + debit.amount, 0);\r\n    const newBalance = totalCredits - totalDebits;\r\n    this.setState({\r\n      debitList: updatedDebits,\r\n      accountBalance: newBalance\r\n    });\r\n  }\r\n\r\n  // Fetch credits and debits, then calculate initial balance\r\n  async componentDidMount() {\r\n    const creditsRes = await fetch(\"https://johnnylaicode.github.io/api/credits.json\");\r\n    const debitsRes = await fetch(\"https://johnnylaicode.github.io/api/debits.json\");\r\n    const credits = await creditsRes.json();\r\n    const debits = await debitsRes.json();\r\n\r\n    const totalCredits = credits.reduce((sum, credit) => sum + credit.amount, 0);\r\n    const totalDebits = debits.reduce((sum, debit) => sum + debit.amount, 0);\r\n    const balance = totalCredits - totalDebits;\r\n\r\n    this.setState({\r\n      creditList: credits,\r\n      debitList: debits,\r\n      accountBalance: balance\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile\r\n        userName={this.state.currentUser.userName}\r\n        memberSince={this.state.currentUser.memberSince}\r\n      />\r\n    );\r\n    const LogInComponent = () => (\r\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\r\n    );\r\n    const CreditsComponent = () => (\r\n      <Credits\r\n        credits={this.state.creditList}\r\n        addCredit={this.addCredit}\r\n        accountBalance={this.state.accountBalance}\r\n      />\r\n    );\r\n    const DebitsComponent = () => (\r\n      <Debits\r\n        debits={this.state.debitList}\r\n        addDebit={this.addDebit}\r\n        accountBalance={this.state.accountBalance}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Router basename=\"/Assignment-3\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent} />\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n          <Route exact path=\"/login\" render={LogInComponent} />\r\n          <Route exact path=\"/credits\" render={CreditsComponent} />\r\n          <Route exact path=\"/debits\" render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}